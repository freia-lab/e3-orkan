#- ###         MODBUS   orkan   iocsh               ###
#- ####################################################
#- >> Mandatory
#- ASYN_PORT_NAME - MODBUS ASYN <name>
#- SERIAL_PORT	  - serial port device name
#- PREFIX	  - PV PREFIX
#- DEV_NAME	  - Device name
#- IOCNAME	  - Prefix for the asynRec
#-


#-https://epics-modules.github.io/master/asyn/R4-42/asynDriver.html
#-Specify the TCP endpoint and give your 'bus' an arbitrary name eg. "asynstream1".
#-drvAsynIPPortConfigure 'port name' 'host:port [protocol]' priority 'disable auto-connect' noProcessEos
#-drvAsynSerialPortConfigure("portName",
#-		             "ttyName",
#-			     priority,
#-			     noAutoConnect,
#-        		     noProcessEosIn)
#-asynSetOption("portName", addr,
#-		"key", "value")

drvAsynSerialPortConfigure("$(ASYN_PORT_NAME)","$(SERIAL_PORT)",0,0,1)
asynSetOption("$(ASYN_PORT_NAME)",0,"baud", $(BAUD=9600))
asynSetOption("$(ASYN_PORT_NAME)",0,"bits", "8")
asynSetOption("$(ASYN_PORT_NAME)",0,"parity", "none")
asynSetOption("$(ASYN_PORT_NAME)",0,"stop", "1")
		
		
#modbusInterposeConfig(portName, 
#                      linkType,
#                      timeoutMsec,
#                      writeDelayMsec)

modbusInterposeConfig("$(ASYN_PORT_NAME)",1,2000,4)

#drvModbusAsynConfigure	 'Port name'
#			 'Octet port name' 
#			 'Modbus slave address' 
#			 'Modbus function code' 
#			 'Modbus start address' 
#			 'Modbus length' 
#			 'Data type' 
#			 'Poll time (msec)' 
#			 'PLC type'

drvModbusAsynConfigure($(ASYN_PORT_NAME)_STATUS, "$(ASYN_PORT_NAME)", 2, 3, 0x2623, 1, "UINT16", 2000, "orkan")
#drvModbusAsynConfigure($(ASYN_PORT_NAME)_DATA_PARAM, "$(ASYN_PORT_NAME)", 2, 3, 16, 4, "INT16", 2000, "orkan")

#Load your database defining the EPICS records
dbLoadRecords("orkan.db", "PORT_STAT=$(ASYN_PORT_NAME)_STATUS,PORT_PARAM=$(ASYN_PORT_NAME)_DATA_PARAM,P=$(PREFIX),D=$(DEV_NAME)")

dbLoadRecords("asynRecord.db","P=$(IOCNAME),R=:asynRec,PORT='$(ASYN_PORT_NAME)',ADDR='0',IMAX='1024',OMAX='256'")
